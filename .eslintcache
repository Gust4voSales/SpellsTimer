[{"C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\index.js":"1","C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\reportWebVitals.js":"2","C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\App.jsx":"3","C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\components\\Spell\\index.jsx":"4","C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\components\\OptionsSelector\\index.jsx":"5"},{"size":500,"mtime":1648081336369,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1646531554936,"results":"8","hashOfConfig":"7"},{"size":1545,"mtime":1648081332973,"results":"9","hashOfConfig":"7"},{"size":2902,"mtime":1648080390491,"results":"10","hashOfConfig":"7"},{"size":621,"mtime":1648081426181,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v42q3o",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\index.js",[],"C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\reportWebVitals.js",[],["24","25"],"C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\App.jsx",[],"C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\components\\Spell\\index.jsx",["26"],"import { useEffect, useState } from 'react'\r\nimport Spells from '../../assets/Spells.json'\r\nimport { Popover } from 'react-tiny-popover'\r\nimport moment from 'moment'\r\nimport { OptionsSelector } from '../OptionsSelector'\r\nimport './styles.css'\r\n\r\n\r\nfunction Spell({ initialSpell, optionsPosition }) {\r\n  const [spell, setSpell] = useState(Spells.find(s => s.name===initialSpell))\r\n  const [startedTime, setTimeStarted] = useState(null)\r\n  const [timer, setTimer] = useState(null)\r\n  const [openOptions, setOpenOptions] = useState(false)\r\n  \r\n  useEffect(() => { // stop timer when spell changes\r\n    setTimer(null) \r\n    setTimeStarted(null)\r\n  }, [spell])\r\n\r\n  useEffect(() => {\r\n    if (!timer && !startedTime)\r\n      return\r\n\r\n    if (timer<0) {\r\n      setTimer(null)\r\n      setTimeStarted(null)\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      let now = moment()\r\n      let secsPassedSinceCicleStarted = now.diff(startedTime, 'seconds')\r\n      \r\n      let ellapsedTime = moment.duration(secsPassedSinceCicleStarted, 'seconds')\r\n      ellapsedTime = Number(ellapsedTime.asSeconds())  \r\n      \r\n      setTimer(spell.cooldown - ellapsedTime)        \r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [startedTime, timer])\r\n\r\n  function handleStartTimer() {\r\n    // setTimer(5)\r\n    setTimeStarted(moment())\r\n    setTimer(spell.cooldown)\r\n  }\r\n\r\n  function handleSpellClick(e) {\r\n    setOpenOptions(false)\r\n    if (e.type==='click') {\r\n      handleStartTimer()\r\n    } else if (e.type==='contextmenu') {\r\n      setOpenOptions(true)\r\n    }\r\n  }\r\n\r\n  function handleOptionSelection(name) {\r\n    setOpenOptions(false)\r\n    setSpell(Spells.find(s => s.name===name))\r\n  }\r\n\r\n  if (spell)\r\n    return (\r\n      <div className='spell-container' >\r\n        <span className={(!!timer && timer<6) ? \"text-flicker\" : ''}>\r\n          {!!timer ? timer : spell.cooldown}\r\n        </span>\r\n\r\n        <Popover\r\n          isOpen={openOptions}\r\n          positions={optionsPosition} // if you'd like, you can limit the positions\r\n          padding={5} // adjust padding here!\r\n          align={true}\r\n          reposition={true} // prevents automatic readjustment of content position that keeps your popover content within its parent's bounds\r\n          onClickOutside={() => {setOpenOptions(false)}} // handle click events outside of the popover/target here!\r\n          content={({ position, nudgedLeft, nudgedTop }) => ( // you can also provide a render function that injects some useful stuff!\r\n            <OptionsSelector onOptionSelected={handleOptionSelection} closeOptions={() => {setOpenOptions(false)}}/>\r\n          )}\r\n        >\r\n          <img src={require('../../assets/'+spell.image).default} alt={spell.image} \r\n            onClick={handleSpellClick} onContextMenu={handleSpellClick}/>\r\n        </Popover>\r\n        \r\n      </div>\r\n    )\r\n\r\n  return (<div></div>)\r\n}\r\n\r\nexport { Spell }","C:\\Users\\Gust4\\Documents\\JavascriptProjects\\spells-timer-lol\\src\\components\\OptionsSelector\\index.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":40,"column":6,"nodeType":"33","endLine":40,"endColumn":26,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spell.cooldown'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTimer' needs the current value of 'spell.cooldown'.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [spell.cooldown, startedTime, timer]",{"range":"40","text":"41"},[1223,1243],"[spell.cooldown, startedTime, timer]"]